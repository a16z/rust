error: const `impl` for trait `Add` which is not marked with `#[const_trait]`
  --> $DIR/const-and-non-const-impl.rs:7:12
   |
LL | impl const std::ops::Add for i32 {
   |            ^^^^^^^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change

error: const `impl` for trait `Add` which is not marked with `#[const_trait]`
  --> $DIR/const-and-non-const-impl.rs:23:12
   |
LL | impl const std::ops::Add for Int {
   |            ^^^^^^^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change

error[E0119]: conflicting implementations of trait `Add` for type `Int`
  --> $DIR/const-and-non-const-impl.rs:23:1
   |
LL | impl std::ops::Add for Int {
   | -------------------------- first implementation here
...
LL | impl const std::ops::Add for Int {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Int`

error[E0117]: only traits defined in the current crate can be implemented for primitive types
  --> $DIR/const-and-non-const-impl.rs:7:1
   |
LL | impl const std::ops::Add for i32 {
   | ^^^^^^^^^^^-------------^^^^^---
   | |          |                 |
   | |          |                 `i32` is not defined in the current crate
   | |          `i32` is not defined in the current crate
   | impl doesn't use only types from inside the current crate
   |
   = note: define and implement a trait or new type instead

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0117, E0119.
For more information about an error, try `rustc --explain E0117`.
